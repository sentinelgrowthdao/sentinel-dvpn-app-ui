"use strict";(self.webpackChunksentinel_dvpn_ui=self.webpackChunksentinel_dvpn_ui||[]).push([[819],{8626:()=>{try{self["workbox:expiration:7.0.0"]&&_()}catch(e){}},2825:(e,t,s)=>{s.d(t,{V:()=>w});var a=s(8288),i=s(2489),n=s(8142),c=s(4178),r=s(6148),h=s(8626);const o="workbox-expiration",d="cache-entries",u=e=>{const t=new URL(e,location.href);return t.hash="",t.href};class m{constructor(e){this._db=null,this._cacheName=e}_upgradeDb(e){const t=e.createObjectStore(d,{keyPath:"id"});t.createIndex("cacheName","cacheName",{unique:!1}),t.createIndex("timestamp","timestamp",{unique:!1})}_upgradeDbAndDeleteOldDbs(e){this._upgradeDb(e),this._cacheName&&(0,r.MR)(this._cacheName)}async setTimestamp(e,t){const s={url:e=u(e),timestamp:t,cacheName:this._cacheName,id:this._getId(e)},a=undefined,i=(await this.getDb()).transaction(d,"readwrite",{durability:"relaxed"});await i.store.put(s),await i.done}async getTimestamp(e){const t=await this.getDb(),s=await t.get(d,this._getId(e));return null==s?void 0:s.timestamp}async expireEntries(e,t){const s=await this.getDb();let a=await s.transaction(d).store.index("timestamp").openCursor(null,"prev");const i=[];let n=0;for(;a;){const s=a.value;s.cacheName===this._cacheName&&(e&&s.timestamp<e||t&&n>=t?i.push(a.value):n++),a=await a.continue()}const c=[];for(const e of i)await s.delete(d,e.id),c.push(e.url);return c}_getId(e){return this._cacheName+"|"+u(e)}async getDb(){return this._db||(this._db=await(0,r.P2)(o,1,{upgrade:this._upgradeDbAndDeleteOldDbs.bind(this)})),this._db}}class p{constructor(e,t={}){this._isRunning=!1,this._rerunRequested=!1,this._maxEntries=t.maxEntries,this._maxAgeSeconds=t.maxAgeSeconds,this._matchOptions=t.matchOptions,this._cacheName=e,this._timestampModel=new m(e)}async expireEntries(){if(this._isRunning)return void(this._rerunRequested=!0);this._isRunning=!0;const e=this._maxAgeSeconds?Date.now()-1e3*this._maxAgeSeconds:0,t=await this._timestampModel.expireEntries(e,this._maxEntries),s=await self.caches.open(this._cacheName);for(const e of t)await s.delete(e,this._matchOptions);this._isRunning=!1,this._rerunRequested&&(this._rerunRequested=!1,(0,i.S)(this.expireEntries()))}async updateTimestamp(e){await this._timestampModel.setTimestamp(e,Date.now())}async isURLExpired(e){if(this._maxAgeSeconds){const t=await this._timestampModel.getTimestamp(e),s=Date.now()-1e3*this._maxAgeSeconds;return void 0===t||t<s}return!1}async delete(){this._rerunRequested=!1,await this._timestampModel.expireEntries(1/0)}}var _=s(540),l=s(5694),g=s(1427);class w{constructor(e={}){this.cachedResponseWillBeUsed=async({event:e,request:t,cacheName:s,cachedResponse:a})=>{if(!a)return null;const n=this._isResponseDateFresh(a),c=this._getCacheExpiration(s);(0,i.S)(c.expireEntries());const r=c.updateTimestamp(t.url);if(e)try{e.waitUntil(r)}catch(e){0}return n?a:null},this.cacheDidUpdate=async({cacheName:e,request:t})=>{const s=this._getCacheExpiration(e);await s.updateTimestamp(t.url),await s.expireEntries()},this._config=e,this._maxAgeSeconds=e.maxAgeSeconds,this._cacheExpirations=new Map,e.purgeOnQuotaError&&(0,g.$)((()=>this.deleteCacheAndMetadata()))}_getCacheExpiration(e){if(e===_.n.getRuntimeName())throw new c.R("expire-custom-caches-only");let t=this._cacheExpirations.get(e);return t||(t=new p(e,this._config),this._cacheExpirations.set(e,t)),t}_isResponseDateFresh(e){if(!this._maxAgeSeconds)return!0;const t=this._getDateHeaderTimestamp(e);if(null===t)return!0;const s=undefined;return t>=Date.now()-1e3*this._maxAgeSeconds}_getDateHeaderTimestamp(e){if(!e.headers.has("date"))return null;const t=e.headers.get("date"),s=undefined,a=new Date(t).getTime();return isNaN(a)?null:a}async deleteCacheAndMetadata(){for(const[e,t]of this._cacheExpirations)await self.caches.delete(e),await t.delete();this._cacheExpirations=new Map}}}}]);